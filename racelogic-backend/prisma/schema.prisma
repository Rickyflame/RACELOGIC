generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sport {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  races    Race[]
  drivers  Driver[]
  teams    Team[]
  vehicles Vehicle[]
}

model Race {
  id         Int          @id @default(autoincrement())
  title      String
  date       DateTime
  location   String
  sport      Sport        @relation(fields: [sportId], references: [id])
  sportId    Int
  results    Result[]
  liveStatus LiveStatus[]
}

model Driver {
  id      Int      @id @default(autoincrement())
  name    String
  country String
  sport   Sport    @relation(fields: [sportId], references: [id])
  sportId Int
  team    Team?    @relation(fields: [teamId], references: [id])
  teamId  Int?
  results Result[]
}

model Team {
  id       Int       @id @default(autoincrement())
  name     String
  sport    Sport     @relation(fields: [sportId], references: [id])
  sportId  Int
  results  Result[]
  vehicles Vehicle[]
  drivers  Driver[]
}

model Result {
  id         Int          @id @default(autoincrement())
  race       Race         @relation(fields: [raceId], references: [id])
  raceId     Int
  driver     Driver       @relation(fields: [driverId], references: [id])
  driverId   Int
  team       Team         @relation(fields: [teamId], references: [id])
  teamId     Int
  position   Int
  points     Int
  fastestLap Boolean      @default(false)
  status     FinishStatus @default(FINISHED)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vehicle {
  id      Int   @id @default(autoincrement())
  sport   Sport @relation(fields: [sportId], references: [id])
  sportId Int
  team    Team? @relation(fields: [teamId], references: [id])
  teamId  Int?

  engine String
  tyres  String
  specs  String
}

model LiveStatus {
  id        Int      @id @default(autoincrement())
  race      Race     @relation(fields: [raceId], references: [id])
  raceId    Int
  isLive    Boolean  @default(false)
  updatedAt DateTime @updatedAt
}

enum FinishStatus {
  FINISHED
  DNF // Did Not Finish
  DNS // Did Not Start
  DSQ // Disqualified
}
